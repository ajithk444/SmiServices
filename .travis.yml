
branches:
  only:
  - master
  - /^release\/.*$/
  - /^hotfix\/.*$/

dist: "bionic"

jobs:
  include:
  - language: csharp
    mono: none
    dotnet: 2.2.100
    addons:
      postgresql: "10"
      apt:
        packages:
        - postgresql-10
        - postgresql-client-10
    services:
      - postgresql
      - mysql
      - mongodb
    before_install:
    - docker run --name=mssql-server -e 'ACCEPT_EULA=Y' -e 'MSSQL_SA_PASSWORD=YourStrong!Passw0rd' -p 1433:1433 -d mcr.microsoft.com/mssql/server:2017-latest
    - sleep 10 # TODO: Add a better check for the SQL server being available after starting the container
    install:
    - wget https://github.com/HicServices/RDMP/releases/download/v3.2.1/rdmp-cli-linux-x64.zip
    - unzip -d rdmp-cli rdmp-cli-linux-x64.zip || true # Ignore exit code since unzip returns 1 for a warning we don't care about
    - chmod +x rdmp-cli/rdmp
    - rdmp-cli/rdmp install localhost TEST_ -u sa -p 'YourStrong!Passw0rd'
    before_script:
    - docker run -d -p 5672:5672 rabbitmq:3
    script:
    - docker ps
    - dotnet build --verbosity quiet
    - dotnet test ./tests/common/Smi.Common.Tests/Smi.Common.Tests.csproj
    - dotnet test ./tests/common/Smi.Common.MongoDb.Tests/Smi.Common.MongoDb.Tests.csproj
    - dotnet test ./tests/microservices/Microservices.CohortExtractor.Tests/Microservices.CohortExtractor.Tests.csproj
    - dotnet test ./tests/microservices/Microservices.CohortPackager.Tests/Microservices.CohortPackager.Tests.csproj
    - dotnet test ./tests/microservices/Microservices.DeadLetterReprocessor.Tests/Microservices.DeadLetterReprocessor.Tests.csproj
    - dotnet test ./tests/microservices/Microservices.DicomRelationalMapper.Tests/Microservices.DicomRelationalMapper.Tests.csproj
    - dotnet test ./tests/microservices/Microservices.DicomReprocessor.Tests/Microservices.DicomReprocessor.Tests.csproj
    - dotnet test ./tests/microservices/Microservices.DicomTagReader.Tests/Microservices.DicomTagReader.Tests.csproj
    - dotnet test ./tests/microservices/Microservices.IdentifierMapper.Tests/Microservices.IdentifierMapper.Tests.csproj
    - dotnet test ./tests/microservices/Microservices.MongoDBPopulator.Tests/Microservices.MongoDBPopulator.Tests.csproj
    - dotnet test ./tests/applications/Applications.DicomDirectoryProcessor.Tests/Applications.DicomDirectoryProcessor.Tests.csproj
    # deploy:
    # - echo "TODO"

  - language: java
    env:
    - PARENT_POM=src/common/com.smi.microservices.parent/pom.xml
    before_install:
    - export MVN_VERSION=3.6.2
    - wget http://apache.mirror.gtcomm.net/maven/maven-3/$MVN_VERSION/binaries/apache-maven-$MVN_VERSION-bin.tar.gz
    - tar xzf apache-maven-$MVN_VERSION-bin.tar.gz
    - export PATH=`pwd`/apache-maven-$MVN_VERSION/bin:$PATH
    - mvn -v
    install:
    - cd ./lib/java
    - ./installDat.sh
    - cd ../..
    before_script:
    - docker run -d -p 5672:5672 rabbitmq:3
    script:
    - docker ps
    - mvn -f $PARENT_POM -ntp install
    deploy:
      on:
        all_branches: true
      skip_cleanup: true
      provider: script
      script:
      - mvn -f $PARENT_POM -ntp assembly:single@create-deployable